cluster_name: cloudwatch

initial_workers: 1
min_workers: 1
max_workers: 2

provider:
    type: aws
    region: us-west-2
    availability_zone: us-west-2b
    cache_stopped_nodes: false
    cloudwatch:
        agent:
            config: "cloudwatch/example-cloudwatch-agent-config.json"
            retryer:
                max_attempts: 20
                delay_seconds: 2
        dashboard:
            name: "example-dashboard-name"
            config: "cloudwatch/example-cloudwatch-dashboard-config.json"
        alarm:
            config: "cloudwatch/example-cloudwatch-alarm-config.json"

auth:
    ssh_user: ubuntu

head_node:
    InstanceType: c5.4xlarge
    ImageId: latest_dlami # Deep Learning AMI (Ubuntu 18.04) Version 27.0
    SecurityGroupIds:


worker_nodes:
    InstanceType: r5n.2xlarge
    ImageId: latest_dlami # Deep Learning AMI (Ubuntu 18.04) Version 27.0
    SecurityGroupIds:

file_mounts: {
    "~/" : "cloudwatch/prometheus.yml",
    "/tmp" : "cloudwatch/cloudwatch_waiter_for_prometheus_metrics.sh"
}

head_setup_commands:
    - sudo mkdir -p /opt/prometheus
    - sudo cp ~/prometheus.yml /opt/prometheus
    - sudo cp /tmp/cloudwatch_waiter_for_prometheus_metrics.sh /opt/prometheus
    - sudo chmod +x /opt/prometheus/cloudwatch_waiter_for_prometheus_metrics.sh
    - sudo snap install jq
    - nohup sh /opt/prometheus/cloudwatch_waiter_for_prometheus_metrics.sh `jq -r .cluster_name ~/ray_bootstrap_config.yaml` > /dev/null 2>&1 &
